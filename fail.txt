The following error happened with the weight constraint translation. I am not
sure but this might be a problem in clasp...

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test_clingcon is a Catch v1.5.6 host application.
Run with -? for options

-------------------------------------------------------------------------------
fs
  fse
-------------------------------------------------------------------------------
../../libclingcon/tests/fs.cc:104
...............................................................................

../../libclingcon/tests/solve.hh:138: FAILED:
  REQUIRE( models == handler.models )
with expansion:
  { "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=3 (b,1)=0 (b,2)=1 (c,1)=4 
  (c,2)=9", "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=7 (b,1)=0 (b,2)=1 
  (c,1)=4 (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=7 (b,1)=0
  (b,2)=1 (c,1)=5 (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=7
  (b,1)=0 (b,2)=1 (c,1)=6 (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=2
  (a,2)=7 (b,1)=0 (b,2)=1 (c,1)=5 (c,2)=11", "permutation(a,c) permutation(b,a)
  (a,1)=2 (a,2)=7 (b,1)=0 (b,2)=1 (c,1)=6 (c,2)=11", "permutation(a,c)
  permutation(b,a) (a,1)=3 (a,2)=7 (b,1)=0 (b,2)=1 (c,1)=6 (c,2)=11" }
  ==
  { "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=7 (b,1)=0 (b,2)=1 (c,1)=4 
  (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=7 (b,1)=0 (b,2)=1
  (c,1)=5 (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=1 (a,2)=7 (b,1)=0
  (b,2)=1 (c,1)=6 (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=2 (a,2)=7
  (b,1)=0 (b,2)=1 (c,1)=5 (c,2)=11", "permutation(a,c) permutation(b,a) (a,1)=2
  (a,2)=7 (b,1)=0 (b,2)=1 (c,1)=6 (c,2)=11", "permutation(a,c) permutation(b,a)
  (a,1)=3 (a,2)=7 (b,1)=0 (b,2)=1 (c,1)=6 (c,2)=11" }
with message:
  configuration: 4
  program: 
  1 { cycle(T,U) : task(U), U != T } 1 :- task(T).
  1 { cycle(T,U) : task(T), U != T } 1 :- task(U).
  
  reach(M) :- M = #min { T : task(T) }.
  reach(U) :- reach(T), cycle(T,U).
  :- task(T), not reach(T).
  
  1 { start(T) : task(T) } 1.
  
  permutation(T,U) :- cycle(T,U), not start(U).
  
  seq((T,M),(T,M+1),D) :- task(T), duration(T,M,D), machine(M+1).
  seq((T1,M),(T2,M),D) :- permutation(T1,T2), duration(T1,M,D).
  
  &sum {  1*T1 + -1*T2 } <= -D :- seq(T1,T2,D).
  &sum { -1*(T,M) } <= 0       :- duration(T,M,D).
  &sum {  1*(T,M) } <= B       :- duration(T,M,D), B=bound-D.
  
  #show permutation/2.
  
              machine(1).      machine(2).
  task(a). duration(a,1,3). duration(a,2,4).
  task(b). duration(b,1,1). duration(b,2,6).
  task(c). duration(c,1,5). duration(c,2,5).
  
  #const bound=16.
